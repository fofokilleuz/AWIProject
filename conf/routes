# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~





# TO SHOW PAGES
GET     /                           controllers.Assets.at(path="/public/html", file="Connection.html")
GET     /newUserAccount             controllers.Assets.at(path="/public/html", file="CreateSimpleAccount.html")
GET     /newSellerAccount           controllers.Assets.at(path="/public/html", file="CreateSellerAccount.html")
GET     /loginPlease                controllers.Assets.at(path="/public/html", file="Login.html")
GET     /homeUser                   controllers.Assets.at(path="/public/html", file="HomeUser.html")
GET     /homeSeller                 controllers.Assets.at(path="/public/html", file="HomeSeller.html")
GET     /myUserAccount              controllers.Assets.at(path="/public/html", file="MyUserAccount.html")
GET     /mySellerAccount            controllers.Assets.at(path="/public/html", file="MySellerAccount.html")

GET		/manageUser				    controllers.Assets.at(path="/public/html", file="ManageUser.html")
GET		/manageSeller			    controllers.Assets.at(path="/public/html", file="ManageSeller.html")
GET		/manageProduct			    controllers.Assets.at(path="/public/html", file="ManageProduct.html")
GET     /allUsers                   controllers.Assets.at(path="/public/html", file="AllUSers.html")


# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /public/*file               controllers.Assets.versioned(path="/public", file : Asset)



#//////////////////#
#/////LOGIN////////#
#//////////////////#

POST /login                                 controllers.ConnectionController.authenticate
GET /login/:token/user/:id                  controllers.ConnectionController.isConnnected(token : String,id : Long)
POST /deconnection                          controllers.ConnectionController.deconnection


#//////////////////#
#//////USER////////#
#//////////////////#

POST	/user   			                controllers.UserController.createUser	
GET   	/users      		                controllers.UserController.getAllUser
GET		/user/:id			                controllers.UserController.getUserById(id : Long)
DELETE  /user/:id                           controllers.UserController.deleteUserById(id : Long)
PUT     /user/:id                           controllers.UserController.UpdateUserById(id : Long)
PUT     /user/:idUser/product/:idProduct    controllers.UserController.addProduct(idUser : Long, idProduct : Long)
GET     /user/:idUser/shoppingCart/:numL    controllers.UserController.getProductShoppingCartByNum(idUser : Long, numL : Long)
DELETE  /user/:idUser/shoppingCart/:numL    controllers.UserController.deleteProductShoppingCartByNum(idUser : Long,numL : Long)
GET     /user/:idUser/shoppingCartTotal     controllers.UserController.sommeProductShoppingCart(idUser : Long)

#//////////////////////////#
#//////ShoppingCart////////#
#//////////////////////////#

GET     /lineShoppingCart                   controllers.UserController.getAllLineBasket
GET     /user/:idUser/lineShoppingCart/:idLine             controllers.UserController.getAllLineBasketByUser(idUser : Long,idLine : Long)

#/////////////////////#
#//////Command////////#
#/////////////////////#

GET     /user/:idUser/basket/seller   controllers.CommandController.getAllSellerfromLineBaskettByIdUser(idUser : Long)
POST    /user/:idUser/command         controllers.CommandController.validateOrder(idUser : Long)
GET     /user/:idUser/command         controllers.CommandController.getLineCommandByUser(idUser :   Long)
GET     /user/:idUser/command/etat=Validate controllers.CommandController.getLineCommandValidate(idUser : Long)

#////////////////////#
#//////SELLER////////#
#////////////////////#

POST	/seller   			    controllers.SellerController.createSeller	
GET   	/sellers      	    	controllers.SellerController.getAllSeller
GET		/seller/:id			    controllers.SellerController.getSellerById(id : Long)
DELETE  /seller/:id             controllers.SellerController.deleteSellerById(id : Long)
PUT     /seller/:id             controllers.SellerController.UpdateSellerById(id : Long)
POST    /seller/:id/product     controllers.SellerController.addProduct(id  :  Long)
GET     /seller/:id/products    controllers.SellerController.getAllProduct(id   :   Long)


#/////////////////////#
#//////PRODUCT////////#
#/////////////////////#


POST    /product            controllers.ProductController.createProduct
GET     /products           controllers.ProductController.getAllProduct
GET     /product/:id        controllers.ProductController.getProductById(id : Long)
DELETE  /product/:id        controllers.ProductController.deleteProductById(id : Long)
PUT     /product/:id        controllers.ProductController.updateProductById(id : Long)




